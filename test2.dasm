org 0x0000
set pc, start 
:cursor dat screen_addr + screen_width * 4 + 4 
:colour dat 0x9100 
:store_a dat 0 
:store_b dat 0 
:print jmp_ print_start ; SET PC ....
:newline jmp_ do_newline 
:setup jmp_ setup_hw 
:system_error jmp_ system_error 
:setup_hw hwn i 
:hw_loop ife i, 0 
set pc, hw_discovered 
sub i, 1 
hwq i 
ife a, 0xf615 
ife b, 0x7349 
set [monitor_idx], i 
ife a, 0xb402 
ife b, 0x12d0 
set [clock_idx], i 
ife a, 0x7406 
ife b, 0x30cf 
set [keyboard_idx], i 
set pc, hw_loop 
:monitor_idx dat NOT_FOUND ; Index of first monitor connected to cpu, or 0xffff 
:clock_idx dat NOT_FOUND ; Index of first clock connected to cpu, or 0xffff 
:keyboard_idx dat NOT_FOUND ; Index of first keyboard connected to cpu, or 0xffff 
:hw_discovered ife [monitor_idx], NOT_FOUND 
set pc, system_error 
set a, 0 
set b, screen_addr 
hwi [monitor_idx] 
set pc, pop 
:do_newline set [store_a], a 
set a,[cursor] 
and a, 0xffe0 
add a, screen_width 
set [cursor],a 
set a, [store_a] 
set pc, pop 
set [store_a], a 
set [store_b], b 
set a, pop 
set b, [cursor] 
loop set [b], [a] 
add [b], [colour] 
add a,1 
add b,1 
ifn [a], 0 
jmp_ loop 
add a,1 
push_ a 
set a, [store_a] 
set b, [store_b] 
set pc, pop 
